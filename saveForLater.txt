                # adjust the sign and magnitude of r

                if eigenvector
                    if isClose(r,0.0) && !isClose(r_swap, 0.0)
                        r_sign_swap = 2
                        r_swap = 0.0
                    elseif (isGreater(r,0.0) && !isGreater(r_swap,0.0)) || (isLess(r,0.0) && !isLess(r_swap,0.0))
                        r_sign_swap = 1
                        if isLess(r_swap, 0.0)
                            r_swap += aeb
                        else
                            r_swap -= aeb
                        end
                    end

                    if isClose(abs(r),s) && !isClose(abs(r_swap),s_swap)
                        if isClose(abs(r),0.0)
                            r_sign_swap = 3
                            r_swap = 0.0
                            s_swap = 0.0
                        else
                            r_over_s_swap = 2
                            newMag = max(abs(r_swap),s_swap)
                            r_swap = sign(r_swap) * newMag
                            s_swap = newMag
                        end
                    elseif (isGreater(abs(r),s) && !isGreater(abs(r_swap),s_swap)) || (isLess(abs(r),s) && !isLess(abs(r_swap),s_swap))
                        r_over_s_swap = 1
                        r_mag = abs(r_swap)
                        r_swap = sign(r_swap) * s
                        s_swap = r_mag
                    end
                elseif !isLess(abs(r),s) && !isLess(abs(r),abs(d))
                    if isClose(abs(r),s) && !isClose(abs(r_swap),s_swap)
                        r_over_s_swap = 2
                        newMag = max(abs(r_swap),s_swap)
                        r_swap = sign(r_swap) * newMag
                        s_swap = sign(s_swap) * newMag
                    elseif isGreater(abs(r),s) && !isGreater(abs(r_swap),s_swap)
                        r_over_s_swap = 1
                        r_mag = abs(r_swap)
                        r_swap = sign(r_swap) * s_swap
                    end
                end

                # adjust sign and magnitude of d
                if eigenvalue

                    if !isLess(abs(d),abs(r)) && !isLess(abs(d),s)

                        if isClose(abs(d),0.0)
                            d_sign_swap = 2
                            d_swap = 0.0
                            r_swap = 0.0
                            s_swap = 0.0

                            r_sign_swap = 0
                            r_over_s_swap = 0
                        else
                            if (isGreater(d,0.0) && !isGreater(d_swap,0.0)) || (isLess(d,0.0) && !isLess(d,0.0))
                                d_sign_swap = 1
                                if isLess(d_swap, 0.0)
                                    d_swap += aeb
                                else
                                    d_swap -= aeb
                                end
                            end

                            if isClose(abs(d),abs(r))
                                d_largest_swap = 3
                                if isClose(abs(r),abs(s)) && !(isClose(abs(r_swap),abs(d_swap)) && isClose(abs(r_swap),s_swap) && isClose(abs(d_swap),s_swap))
                                    r_over_s_swap = 2 # this may not have already been set
                                    maxVal = max(abs(d_swap), abs(r_swap), s_swap)
                                    r_swap = sign(r_swap) * maxVal
                                    d_swap = sign(d_swap) * maxVal
                                    s_swap = maxVal
                                elseif !(isClose(abs(d_swap),abs(r_swap)) && isGreater(abs(d_swap),s_swap))
                                    r_over_s_swap = 0 # this would be redundant
                                    maxVal = max(abs(d_swap), abs(r_swap), s_swap)
                                    minVal = min(abs(d_swap), abs(r_swap), s_swap)
                                    r_swap = sign(r_swap) * maxVal
                                    d_swap = sign(d_swap) * maxVal
                                    s_swap = minVal
                                end
                            elseif isClose(abs(d),s) && !(isClose(abs(d_swap),s_swap) && isGreater(abs(d_swap),abs(r_swap)))
                                d_largest_swap = 2
                                maxVal = max(abs(d_swap), abs(r_swap), s_swap)
                                minVal = min(abs(d_swap), abs(r_swap), s_swap)
                                d_swap = sign(d_swap) * maxVal
                                s_swap = maxVal
                                r_swap = sign(r_swap) * minVal
                            elseif isLess(abs(d_swap),abs(r_swap)) || isLess(abs(d_swap),s_swap)
                                d_largest_swap = 1
                                r_swap_greater_than_s_swap = !isLess(abs(r_swap),s_swap)
                                d_currently_smallest = !isGreater(abs(d_swap), min(abs(r_swap),s_swap))

                                if r_swap_greater_than_s_swap
                                    if d_currently_smallest
                                        high = abs(r_swap)
                                        med = s_swap
                                        low = abs(d_swap)

                                        d_swap = sign(d_swap) * high
                                        r_swap = sign(r_swap) * med
                                        s_swap = low
                                    else
                                        high = abs(r_swap)
                                        med = abs(d_swap)

                                        d_swap = sign(d_swap) * high
                                        r_swap = sign(r_swap) * med
                                    end
                                else
                                    if d_currently_smallest
                                        high = s_swap
                                        med = abs(r_swap)
                                        low = abs(d_swap)

                                        d_swap = sign(d_swap) * high
                                        s_swap = med
                                        r_swap = sign(r_swap) * low
                                    else
                                        high = s_swap
                                        med = abs(d_swap)

                                        d_swap = sign(d_swap) * high
                                        s_swap = med
                                    end
                                end
                            end
                        end
                    else 
                end